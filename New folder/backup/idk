from PIL import Image, ImageDraw

import random, math, colorsys

def random_color():
    # I want a bright, vivid color, so max V and S and only randomize HUE.
    h = random.random()
    s = 1
    v = 1
    float_rbg = colorsys.hsv_to_rgb(h, s, v)
    # Return as integer RGB.
    return (
        int(float_rbg[0] * 255),
        int(float_rbg[1] * 255),
        int(float_rbg[2] * 255),
    ) 

def generate_art():
    print('Generate Art')
    image_size_px = 2000
    image_bg_color = (255,255,255)
    image = Image.new(
        "RGB",
        size=(image_size_px, image_size_px),
        color = image_bg_color
    )
    draw = ImageDraw.Draw(image)
    points = []
    starting_pos = (0,image_size_px*.50),(image_size_px,image_size_px*.50)
    x = 0
    y = image_size_px*.50
    for _ in range(0, math.ceil(10)):
        x += 200
        y += (100-random.randint(0, image_size_px*0.4))
        if y >= image_size_px*0.4: 
            y -=300
        elif y <= image_size_px*0.4:
            y += 300
        newpoints = (x, y)
        points.append(newpoints)
        y -= (100-random.randint(0, image_size_px*0.4))
        x += 200
        newpoints = (x, y)
        points.append(newpoints)
        line_xy= (points)
        connectiveArrayX = []
        connectiveArrayY = []

        line_color = random_color()
        for x, y in line_xy:
            tempx = x
            tempy = y
            for i in range(len(line_xy)):
                newx = list(line_xy[i])
                newy = list(line_xy[i])
                for newDiffX in range(tempx-newx[0]):
                    newx[0] =  tempx - newx[0] 
                    connectiveArrayX.append(abs(newx[0]))
                    
                for newDiffY in range(math.ceil(tempy-newy[1])):
                    newy[1] =  tempy - newy[1]
                    connectiveArrayY.append(abs(newy[1]))
                    
        connectiveArray = zip(connectiveArrayX, connectiveArrayY)
        for newX, newY in connectiveArray:    
            # print(f"x: {newX}, y: {newY}\n\n")
            draw.ellipse((abs(newX), abs(newY), abs(newX+50),abs(newY+50)), fill=random_color())
    image.save('test_image.png')
if __name__ == "__main__":
    generate_art()